{"ast":null,"code":"var _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StackGrid from \"react-stack-grid\";\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paints = props => {\n  const {\n    0: paints,\n    1: setPaints\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  useEffect(() => {\n    const fetchPaints = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3100/paints\");\n        setPaints(response.data);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    };\n\n    fetchPaints();\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, !isLoading ? __jsx(\"div\", {\n    className: \"jsx-1355143799\" + \" \" + \"grid-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(StackGrid, {\n    columnWidth: \"33.33333%\",\n    gutterWidth: 20,\n    gutterHeight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, paints.map(paint => {\n    return __jsx(PaintBloc, _extends({\n      key: paint._id\n    }, paint, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  })), __jsx(_JSXStyle, {\n    id: \"1355143799\",\n    __self: this\n  }, \".grid-wrapper.jsx-1355143799{width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BcnRodXJHb3VwaWwvRG9jdW1lbnRzL0RldmVsb3BtZW50L1Byb2plY3RzL1JlYWN0L2dhaW56LXdlYnNpdGUvZnJvbnRlbmQvcGFnZXMvcGFpbnRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1DYSxBQUc0QixXQUNiIiwiZmlsZSI6Ii9Vc2Vycy9BcnRodXJHb3VwaWwvRG9jdW1lbnRzL0RldmVsb3BtZW50L1Byb2plY3RzL1JlYWN0L2dhaW56LXdlYnNpdGUvZnJvbnRlbmQvcGFnZXMvcGFpbnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XG5pbXBvcnQgU3RhY2tHcmlkIGZyb20gXCJyZWFjdC1zdGFjay1ncmlkXCI7XG5cbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvTGF5b3V0XCI7XG5pbXBvcnQgUGFpbnRCbG9jIGZyb20gXCIuLi9jb21wb25lbnRzL1BhaW50QmxvY1wiO1xuXG5jb25zdCBQYWludHMgPSBwcm9wcyA9PiB7XG4gIGNvbnN0IFtwYWludHMsIHNldFBhaW50c10gPSB1c2VTdGF0ZShbXSk7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGZldGNoUGFpbnRzID0gYXN5bmMgKCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoXCJodHRwOi8vbG9jYWxob3N0OjMxMDAvcGFpbnRzXCIpO1xuICAgICAgICBzZXRQYWludHMocmVzcG9uc2UuZGF0YSk7XG4gICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZS5tZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGZldGNoUGFpbnRzKCk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICB7IWlzTG9hZGluZyA/IChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkLXdyYXBwZXJcIj5cbiAgICAgICAgICA8U3RhY2tHcmlkIGNvbHVtbldpZHRoPVwiMzMuMzMzMzMlXCIgZ3V0dGVyV2lkdGg9ezIwfSBndXR0ZXJIZWlnaHQ9ezIwfT5cbiAgICAgICAgICAgIHtwYWludHMubWFwKHBhaW50ID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIDxQYWludEJsb2Mga2V5PXtwYWludC5faWR9IHsuLi5wYWludH0gLz47XG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICA8L1N0YWNrR3JpZD5cbiAgICAgICAgICA8c3R5bGUganN4PlxuICAgICAgICAgICAge2BcbiAgICAgICAgICAgICAgLmdyaWQtd3JhcHBlciB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgICApIDogKFxuICAgICAgICA8c3Bhbj50ZXN0PC9zcGFuPlxuICAgICAgKX1cbiAgICA8L0xheW91dD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBhaW50cztcbiJdfQ== */\\n/*@ sourceURL=/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js */\")) : __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"test\"));\n};\n\nexport default Paints;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js"],"names":["useState","useEffect","axios","StackGrid","Layout","PaintBloc","Paints","props","paints","setPaints","isLoading","setIsLoading","fetchPaints","response","get","data","e","console","error","message","map","paint","_id"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACU,SAAD;AAAA,OAAYC;AAAZ,MAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,8BAAV,CAAvB;AACAL,QAAAA,SAAS,CAACI,QAAQ,CAACE,IAAV,CAAT;AACAJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJD,CAIE,OAAOK,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,OAAhB;AACD;AACF,KARD;;AASAP,IAAAA,WAAW;AACZ,GAXQ,EAWN,EAXM,CAAT;AAaA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,SAAD,GACC;AAAA,wCAAe,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAC,WAAvB;AAAmC,IAAA,WAAW,EAAE,EAAhD;AAAoD,IAAA,YAAY,EAAE,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACY,GAAP,CAAWC,KAAK,IAAI;AACnB,WAAO,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAK,CAACC;AAAtB,OAA+BD,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CADF;AAAA;AAAA;AAAA,iwEADD,GAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,CADF;AAsBD,CAvCD;;AAyCA,eAAef,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport StackGrid from \"react-stack-grid\";\n\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paints = props => {\n  const [paints, setPaints] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPaints = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3100/paints\");\n        setPaints(response.data);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    };\n    fetchPaints();\n  }, []);\n\n  return (\n    <Layout>\n      {!isLoading ? (\n        <div className=\"grid-wrapper\">\n          <StackGrid columnWidth=\"33.33333%\" gutterWidth={20} gutterHeight={20}>\n            {paints.map(paint => {\n              return <PaintBloc key={paint._id} {...paint} />;\n            })}\n          </StackGrid>\n          <style jsx>\n            {`\n              .grid-wrapper {\n                width: 100%;\n              }\n            `}\n          </style>\n        </div>\n      ) : (\n        <span>test</span>\n      )}\n    </Layout>\n  );\n};\n\nexport default Paints;\n"]},"metadata":{},"sourceType":"module"}