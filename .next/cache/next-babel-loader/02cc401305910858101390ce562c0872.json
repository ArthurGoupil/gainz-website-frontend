{"ast":null,"code":"var _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paintings = props => {\n  const {\n    0: paintings,\n    1: setPaintings\n  } = useState([]);\n  const {\n    0: paintingsGrid,\n    1: setPaintingsGrid\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const paintingsArr = [];\n  const fetchPaintings = useCallback(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3100/paintings\");\n      setPaintings(response.data);\n      response.data.forEach(painting => {\n        paintingsArr.push({\n          src: painting.smallImage,\n          width: painting.width,\n          height: painting.height\n        });\n      });\n      setPaintingsGrid(paintingsArr);\n      setIsLoading(false);\n    } catch (e) {\n      console.error(e.message);\n    }\n  });\n  useEffect(() => {\n    fetchPaintings();\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, !isLoading ? __jsx(Gallery, {\n    margin: 10,\n    photos: paintingsGrid,\n    limitNodeSearch: 3,\n    targetRowHeight: 450,\n    renderImage: ({\n      index,\n      photo,\n      margin\n    }) => __jsx(PaintBloc, _extends({\n      key: paintings[index]._id,\n      index: index,\n      photo: photo,\n      margin: margin\n    }, paintings[index], {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }) : __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"test\"));\n};\n\nexport default Paints;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js"],"names":["useState","useEffect","useCallback","axios","Gallery","Layout","PaintBloc","Paintings","props","paintings","setPaintings","paintingsGrid","setPaintingsGrid","isLoading","setIsLoading","paintingsArr","fetchPaintings","response","get","data","forEach","painting","push","src","smallImage","width","height","e","console","error","message","index","photo","margin","_id","Paints"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACW,aAAD;AAAA,OAAgBC;AAAhB,MAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAACa,SAAD;AAAA,OAAYC;AAAZ,MAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMe,YAAY,GAAG,EAArB;AAEA,QAAMC,cAAc,GAAGd,WAAW,CAAC,YAAY;AAC7C,QAAI;AACF,YAAMe,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,iCAAV,CAAvB;AACAR,MAAAA,YAAY,CAACO,QAAQ,CAACE,IAAV,CAAZ;AACAF,MAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,QAAQ,IAAI;AAChCN,QAAAA,YAAY,CAACO,IAAb,CAAkB;AAChBC,UAAAA,GAAG,EAAEF,QAAQ,CAACG,UADE;AAEhBC,UAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAFA;AAGhBC,UAAAA,MAAM,EAAEL,QAAQ,CAACK;AAHD,SAAlB;AAKD,OAND;AAOAd,MAAAA,gBAAgB,CAACG,YAAD,CAAhB;AACAD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAZD,CAYE,OAAOa,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,OAAhB;AACD;AACF,GAhBiC,CAAlC;AAkBA7B,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,SAAD,GACC,MAAC,OAAD;AACE,IAAA,MAAM,EAAE,EADV;AAEE,IAAA,MAAM,EAAEF,aAFV;AAGE,IAAA,eAAe,EAAE,CAHnB;AAIE,IAAA,eAAe,EAAE,GAJnB;AAKE,IAAA,WAAW,EAAE,CAAC;AAAEoB,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,KAAD,KACX,MAAC,SAAD;AACE,MAAA,GAAG,EAAExB,SAAS,CAACsB,KAAD,CAAT,CAAiBG,GADxB;AAEE,MAAA,KAAK,EAAEH,KAFT;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,MAAM,EAAEC;AAJV,OAKMxB,SAAS,CAACsB,KAAD,CALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAiBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,CADF;AAuBD,CAnDD;;AAqDA,eAAeI,MAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\n\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paintings = props => {\n  const [paintings, setPaintings] = useState([]);\n  const [paintingsGrid, setPaintingsGrid] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const paintingsArr = [];\n\n  const fetchPaintings = useCallback(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3100/paintings\");\n      setPaintings(response.data);\n      response.data.forEach(painting => {\n        paintingsArr.push({\n          src: painting.smallImage,\n          width: painting.width,\n          height: painting.height\n        });\n      });\n      setPaintingsGrid(paintingsArr);\n      setIsLoading(false);\n    } catch (e) {\n      console.error(e.message);\n    }\n  });\n\n  useEffect(() => {\n    fetchPaintings();\n  }, []);\n\n  return (\n    <Layout>\n      {!isLoading ? (\n        <Gallery\n          margin={10}\n          photos={paintingsGrid}\n          limitNodeSearch={3}\n          targetRowHeight={450}\n          renderImage={({ index, photo, margin }) => (\n            <PaintBloc\n              key={paintings[index]._id}\n              index={index}\n              photo={photo}\n              margin={margin}\n              {...paintings[index]}\n            />\n          )}\n        />\n      ) : (\n        <span>test</span>\n      )}\n    </Layout>\n  );\n};\n\nexport default Paints;\n"]},"metadata":{},"sourceType":"module"}