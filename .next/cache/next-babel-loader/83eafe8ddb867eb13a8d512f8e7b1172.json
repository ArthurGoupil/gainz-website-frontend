{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paint/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\n\nvar Paint = function Paint(props) {\n  var router = useRouter();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      paint = _useState2[0],\n      setPaint = _useState2[1];\n\n  var fetchPaint = useCallback(function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3100/paints\"));\n\n          case 3:\n            response = _context.sent;\n            setPaint(response.data);\n            response.data.forEach(function (paint) {\n              paintsArr.push({\n                src: paint.smallImage,\n                width: paint.width,\n                height: paint.height\n              });\n            });\n            setPaintsGrid(paintsArr);\n            setIsLoading(false);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0.message);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  });\n  useEffect(function () {\n    fetchPaints();\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, router.query.id));\n};\n\nexport default Paint;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paint/[id].js"],"names":["useRouter","Layout","Paint","props","router","useState","paint","setPaint","fetchPaint","useCallback","axios","get","response","data","forEach","paintsArr","push","src","smallImage","width","height","setPaintsGrid","setIsLoading","console","error","message","useEffect","fetchPaints","query","id"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AADqB,kBAEKK,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,MAEdC,KAFc;AAAA,MAEPC,QAFO;;AAIrB,MAAMC,UAAU,GAAGC,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEJC,KAAK,CAACC,GAAN,CAAU,8BAAV,CAFI;;AAAA;AAErBC,YAAAA,QAFqB;AAG3BL,YAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR;AACAD,YAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,UAAAR,KAAK,EAAI;AAC7BS,cAAAA,SAAS,CAACC,IAAV,CAAe;AACbC,gBAAAA,GAAG,EAAEX,KAAK,CAACY,UADE;AAEbC,gBAAAA,KAAK,EAAEb,KAAK,CAACa,KAFA;AAGbC,gBAAAA,MAAM,EAAEd,KAAK,CAACc;AAHD,eAAf;AAKD,aAND;AAOAC,YAAAA,aAAa,CAACN,SAAD,CAAb;AACAO,YAAAA,YAAY,CAAC,KAAD,CAAZ;AAZ2B;AAAA;;AAAA;AAAA;AAAA;AAc3BC,YAAAA,OAAO,CAACC,KAAR,CAAc,YAAEC,OAAhB;;AAd2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,CAA9B;AAkBAC,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKvB,MAAM,CAACwB,KAAP,CAAaC,EAAlB,CADF,CADF;AAKD,CA/BD;;AAiCA,eAAe3B,KAAf","sourcesContent":["import { useRouter } from \"next/router\";\n\nimport Layout from \"../../components/Layout\";\n\nconst Paint = props => {\n  const router = useRouter();\n  const [paint, setPaint] = useState({});\n\n  const fetchPaint = useCallback(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3100/paints\");\n      setPaint(response.data);\n      response.data.forEach(paint => {\n        paintsArr.push({\n          src: paint.smallImage,\n          width: paint.width,\n          height: paint.height\n        });\n      });\n      setPaintsGrid(paintsArr);\n      setIsLoading(false);\n    } catch (e) {\n      console.error(e.message);\n    }\n  });\n\n  useEffect(() => {\n    fetchPaints();\n  }, []);\n\n  return (\n    <Layout>\n      <h1>{router.query.id}</h1>\n    </Layout>\n  );\n};\n\nexport default Paint;\n"]},"metadata":{},"sourceType":"module"}