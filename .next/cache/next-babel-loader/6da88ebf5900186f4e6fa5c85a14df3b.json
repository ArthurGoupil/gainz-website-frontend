{"ast":null,"code":"var _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paints = props => {\n  const {\n    0: paints,\n    1: setPaints\n  } = useState([]);\n  const {\n    0: paintsGrid,\n    1: setPaintsGrid\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const paintsArr = [];\n  useEffect(() => {\n    const fetchPaints = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3100/paints\");\n        setPaints(response.data);\n        response.data.forEach(paint => {\n          paintsArr.push({\n            src: paint.smallImage,\n            width: paint.width,\n            height: paint.height\n          });\n        });\n        setPaintsGrid(paintsArr);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    };\n\n    fetchPaints();\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, !isLoading ? __jsx(Gallery, {\n    photos: paintsArr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }) : __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"test\"));\n};\n\nexport default Paints;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js"],"names":["useState","useEffect","axios","Gallery","Layout","PaintBloc","Paints","props","paints","setPaints","paintsGrid","setPaintsGrid","isLoading","setIsLoading","paintsArr","fetchPaints","response","get","data","forEach","paint","push","src","smallImage","width","height","e","console","error","message"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACU,UAAD;AAAA,OAAaC;AAAb,MAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACY,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMc,SAAS,GAAG,EAAlB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,8BAAV,CAAvB;AACAR,QAAAA,SAAS,CAACO,QAAQ,CAACE,IAAV,CAAT;AACAF,QAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,KAAK,IAAI;AAC7BN,UAAAA,SAAS,CAACO,IAAV,CAAe;AACbC,YAAAA,GAAG,EAAEF,KAAK,CAACG,UADE;AAEbC,YAAAA,KAAK,EAAEJ,KAAK,CAACI,KAFA;AAGbC,YAAAA,MAAM,EAAEL,KAAK,CAACK;AAHD,WAAf;AAKD,SAND;AAOAd,QAAAA,aAAa,CAACG,SAAD,CAAb;AACAD,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAZD,CAYE,OAAOa,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,OAAhB;AACD;AACF,KAhBD;;AAiBAd,IAAAA,WAAW;AACZ,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,SAAD,GAAa,MAAC,OAAD;AAAS,IAAA,MAAM,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,GAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADjD,CADF;AAKD,CAhCD;;AAkCA,eAAeR,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\n\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paints = props => {\n  const [paints, setPaints] = useState([]);\n  const [paintsGrid, setPaintsGrid] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const paintsArr = [];\n\n  useEffect(() => {\n    const fetchPaints = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3100/paints\");\n        setPaints(response.data);\n        response.data.forEach(paint => {\n          paintsArr.push({\n            src: paint.smallImage,\n            width: paint.width,\n            height: paint.height\n          });\n        });\n        setPaintsGrid(paintsArr);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    };\n    fetchPaints();\n  }, []);\n\n  return (\n    <Layout>\n      {!isLoading ? <Gallery photos={paintsArr} /> : <span>test</span>}\n    </Layout>\n  );\n};\n\nexport default Paints;\n"]},"metadata":{},"sourceType":"module"}