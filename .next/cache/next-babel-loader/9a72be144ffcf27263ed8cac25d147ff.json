{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nvar Paints = function Paints(props) {\n  var _useState = useState([]),\n      paints = _useState[0],\n      setPaints = _useState[1];\n\n  var _useState2 = useState([]),\n      paintsGrid = _useState2[0],\n      setPaintsGrid = _useState2[1];\n\n  var _useState3 = useState(true),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var paintsArr = [];\n  useEffect(function () {\n    var fetchPaints = function fetchPaints() {\n      var response;\n      return _regeneratorRuntime.async(function fetchPaints$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3100/paints\"));\n\n            case 3:\n              response = _context.sent;\n              setPaints(response.data);\n              response.data.forEach(function (paint) {\n                paintsArr.push({\n                  src: paint.smallImage,\n                  width: paint.width,\n                  height: paint.height\n                });\n              });\n              setPaintsGrid(paintsArr);\n              setIsLoading(false);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0.message);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n\n    fetchPaints();\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, !isLoading ? __jsx(Gallery, {\n    photos: paintsGrid,\n    targetRowHeight: 700,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"test\"));\n};\n\nexport default Paints;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js"],"names":["useState","useEffect","axios","Gallery","Layout","PaintBloc","Paints","props","paints","setPaints","paintsGrid","setPaintsGrid","isLoading","setIsLoading","paintsArr","fetchPaints","get","response","data","forEach","paint","push","src","smallImage","width","height","console","error","message"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA,kBACMP,QAAQ,CAAC,EAAD,CADd;AAAA,MACfQ,MADe;AAAA,MACPC,SADO;;AAAA,mBAEcT,QAAQ,CAAC,EAAD,CAFtB;AAAA,MAEfU,UAFe;AAAA,MAEHC,aAFG;;AAAA,mBAGYX,QAAQ,CAAC,IAAD,CAHpB;AAAA,MAGfY,SAHe;AAAA,MAGJC,YAHI;;AAItB,MAAMC,SAAS,GAAG,EAAlB;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEOb,KAAK,CAACc,GAAN,CAAU,8BAAV,CAFP;;AAAA;AAEVC,cAAAA,QAFU;AAGhBR,cAAAA,SAAS,CAACQ,QAAQ,CAACC,IAAV,CAAT;AACAD,cAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,UAAAC,KAAK,EAAI;AAC7BN,gBAAAA,SAAS,CAACO,IAAV,CAAe;AACbC,kBAAAA,GAAG,EAAEF,KAAK,CAACG,UADE;AAEbC,kBAAAA,KAAK,EAAEJ,KAAK,CAACI,KAFA;AAGbC,kBAAAA,MAAM,EAAEL,KAAK,CAACK;AAHD,iBAAf;AAKD,eAND;AAOAd,cAAAA,aAAa,CAACG,SAAD,CAAb;AACAD,cAAAA,YAAY,CAAC,KAAD,CAAZ;AAZgB;AAAA;;AAAA;AAAA;AAAA;AAchBa,cAAAA,OAAO,CAACC,KAAR,CAAc,YAAEC,OAAhB;;AAdgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB;;AAiBAb,IAAAA,WAAW;AACZ,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,SAAD,GACC,MAAC,OAAD;AAAS,IAAA,MAAM,EAAEF,UAAjB;AAA6B,IAAA,eAAe,EAAE,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CADF;AASD,CApCD;;AAsCA,eAAeJ,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\n\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paints = props => {\n  const [paints, setPaints] = useState([]);\n  const [paintsGrid, setPaintsGrid] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const paintsArr = [];\n\n  useEffect(() => {\n    const fetchPaints = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3100/paints\");\n        setPaints(response.data);\n        response.data.forEach(paint => {\n          paintsArr.push({\n            src: paint.smallImage,\n            width: paint.width,\n            height: paint.height\n          });\n        });\n        setPaintsGrid(paintsArr);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    };\n    fetchPaints();\n  }, []);\n\n  return (\n    <Layout>\n      {!isLoading ? (\n        <Gallery photos={paintsGrid} targetRowHeight={700} />\n      ) : (\n        <span>test</span>\n      )}\n    </Layout>\n  );\n};\n\nexport default Paints;\n"]},"metadata":{},"sourceType":"module"}