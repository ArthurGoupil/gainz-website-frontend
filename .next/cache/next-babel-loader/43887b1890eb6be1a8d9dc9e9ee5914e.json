{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\nimport SelectedImage from \"../components/SelectedImage\";\n\nvar Paints = function Paints(props) {\n  var _useState = useState([]),\n      paints = _useState[0],\n      setPaints = _useState[1];\n\n  var _useState2 = useState([]),\n      paintsGrid = _useState2[0],\n      setPaintsGrid = _useState2[1];\n\n  var _useState3 = useState(true),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var paintsArr = []; // const imageRenderer = useCallback(({ index, photo, key }) => {\n  // });\n\n  var imageRenderer = useCallback(function (_ref) {\n    var index = _ref.index,\n        left = _ref.left,\n        top = _ref.top,\n        key = _ref.key,\n        photo = _ref.photo;\n    return console.log(paints);\n  }, // <PaintBloc key={key} margin={\"20px\"} index={index} {...paints[index]} />\n  // <SelectedImage\n  //   selected={false}\n  //   key={photo._id}\n  //   margin={\"2px\"}\n  //   index={index}\n  //   photo={photo}\n  //   left={left}\n  //   top={top}\n  // />\n  []);\n  var fetchPaints = useCallback(function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3100/paints\"));\n\n          case 3:\n            response = _context.sent;\n            setPaints(response.data);\n            response.data.forEach(function (paint) {\n              paintsArr.push({\n                _id: paint._id,\n                src: paint.smallImage,\n                width: paint.width,\n                height: paint.height\n              });\n            });\n            setPaintsGrid(paintsArr);\n            setIsLoading(false);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0.message);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  });\n  useEffect(function () {\n    fetchPaints();\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, !isLoading ? __jsx(Gallery, {\n    photos: paintsGrid,\n    renderImage: imageRenderer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"test\"));\n};\n\nexport default Paints;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js"],"names":["useState","useEffect","useCallback","axios","Gallery","Layout","PaintBloc","SelectedImage","Paints","props","paints","setPaints","paintsGrid","setPaintsGrid","isLoading","setIsLoading","paintsArr","imageRenderer","index","left","top","key","photo","console","log","fetchPaints","get","response","data","forEach","paint","push","_id","src","smallImage","width","height","error","message"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA,kBACMT,QAAQ,CAAC,EAAD,CADd;AAAA,MACfU,MADe;AAAA,MACPC,SADO;;AAAA,mBAEcX,QAAQ,CAAC,EAAD,CAFtB;AAAA,MAEfY,UAFe;AAAA,MAEHC,aAFG;;AAAA,mBAGYb,QAAQ,CAAC,IAAD,CAHpB;AAAA,MAGfc,SAHe;AAAA,MAGJC,YAHI;;AAItB,MAAMC,SAAS,GAAG,EAAlB,CAJsB,CAMtB;AACA;;AAEA,MAAMC,aAAa,GAAGf,WAAW,CAC/B;AAAA,QAAGgB,KAAH,QAAGA,KAAH;AAAA,QAAUC,IAAV,QAAUA,IAAV;AAAA,QAAgBC,GAAhB,QAAgBA,GAAhB;AAAA,QAAqBC,GAArB,QAAqBA,GAArB;AAAA,QAA0BC,KAA1B,QAA0BA,KAA1B;AAAA,WAAsCC,OAAO,CAACC,GAAR,CAAYd,MAAZ,CAAtC;AAAA,GAD+B,EAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAb+B,CAAjC;AAgBA,MAAMe,WAAW,GAAGvB,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAELC,KAAK,CAACuB,GAAN,CAAU,8BAAV,CAFK;;AAAA;AAEtBC,YAAAA,QAFsB;AAG5BhB,YAAAA,SAAS,CAACgB,QAAQ,CAACC,IAAV,CAAT;AACAD,YAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,UAAAC,KAAK,EAAI;AAC7Bd,cAAAA,SAAS,CAACe,IAAV,CAAe;AACbC,gBAAAA,GAAG,EAAEF,KAAK,CAACE,GADE;AAEbC,gBAAAA,GAAG,EAAEH,KAAK,CAACI,UAFE;AAGbC,gBAAAA,KAAK,EAAEL,KAAK,CAACK,KAHA;AAIbC,gBAAAA,MAAM,EAAEN,KAAK,CAACM;AAJD,eAAf;AAMD,aAPD;AAQAvB,YAAAA,aAAa,CAACG,SAAD,CAAb;AACAD,YAAAA,YAAY,CAAC,KAAD,CAAZ;AAb4B;AAAA;;AAAA;AAAA;AAAA;AAe5BQ,YAAAA,OAAO,CAACc,KAAR,CAAc,YAAEC,OAAhB;;AAf4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,CAA/B;AAmBArC,EAAAA,SAAS,CAAC,YAAM;AACdwB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACX,SAAD,GACC,MAAC,OAAD;AAAS,IAAA,MAAM,EAAEF,UAAjB;AAA6B,IAAA,WAAW,EAAEK,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CADF;AASD,CAzDD;;AA2DA,eAAeT,MAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\n\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\nimport SelectedImage from \"../components/SelectedImage\";\n\nconst Paints = props => {\n  const [paints, setPaints] = useState([]);\n  const [paintsGrid, setPaintsGrid] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const paintsArr = [];\n\n  // const imageRenderer = useCallback(({ index, photo, key }) => {\n  // });\n\n  const imageRenderer = useCallback(\n    ({ index, left, top, key, photo }) => console.log(paints),\n\n    // <PaintBloc key={key} margin={\"20px\"} index={index} {...paints[index]} />\n    // <SelectedImage\n    //   selected={false}\n    //   key={photo._id}\n    //   margin={\"2px\"}\n    //   index={index}\n    //   photo={photo}\n    //   left={left}\n    //   top={top}\n    // />\n    []\n  );\n\n  const fetchPaints = useCallback(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3100/paints\");\n      setPaints(response.data);\n      response.data.forEach(paint => {\n        paintsArr.push({\n          _id: paint._id,\n          src: paint.smallImage,\n          width: paint.width,\n          height: paint.height\n        });\n      });\n      setPaintsGrid(paintsArr);\n      setIsLoading(false);\n    } catch (e) {\n      console.error(e.message);\n    }\n  });\n\n  useEffect(() => {\n    fetchPaints();\n  }, []);\n\n  return (\n    <Layout>\n      {!isLoading ? (\n        <Gallery photos={paintsGrid} renderImage={imageRenderer} />\n      ) : (\n        <span>test</span>\n      )}\n    </Layout>\n  );\n};\n\nexport default Paints;\n"]},"metadata":{},"sourceType":"module"}