{"ast":null,"code":"var _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/painting/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\n\nconst Painting = props => {\n  const router = useRouter();\n  const {\n    0: painting,\n    1: setPainting\n  } = useState({});\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const id = router.query.id;\n  const fetchPainting = useCallback(async () => {\n    if (id) {\n      try {\n        const response = await axios.get(`http://localhost:3100/painting/${id}`);\n        setPainting(response.data);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    }\n  });\n  useEffect(() => {\n    fetchPainting();\n  }, [id]);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, !isLoading ? __jsx(\"img\", {\n    src: painting.bigImage,\n    alt: \"\",\n    className: \"jsx-3827894570\" + \" \" + \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : __jsx(\"span\", {\n    className: \"jsx-3827894570\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"test\"), __jsx(_JSXStyle, {\n    id: \"3827894570\",\n    __self: this\n  }, \".image.jsx-3827894570{height:calc(100vh - 155px);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BcnRodXJHb3VwaWwvRG9jdW1lbnRzL0RldmVsb3BtZW50L1Byb2plY3RzL1JlYWN0L2dhaW56LXdlYnNpdGUvZnJvbnRlbmQvcGFnZXMvcGFpbnRpbmcvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzQ2tCLEFBR3NDLDJCQUM3QiIsImZpbGUiOiIvVXNlcnMvQXJ0aHVyR291cGlsL0RvY3VtZW50cy9EZXZlbG9wbWVudC9Qcm9qZWN0cy9SZWFjdC9nYWluei13ZWJzaXRlL2Zyb250ZW5kL3BhZ2VzL3BhaW50aW5nL1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5cbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcblxuaW1wb3J0IExheW91dCBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9MYXlvdXRcIjtcblxuY29uc3QgUGFpbnRpbmcgPSBwcm9wcyA9PiB7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICBjb25zdCBbcGFpbnRpbmcsIHNldFBhaW50aW5nXSA9IHVzZVN0YXRlKHt9KTtcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBpZCA9IHJvdXRlci5xdWVyeS5pZDtcblxuICBjb25zdCBmZXRjaFBhaW50aW5nID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGlmIChpZCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoXG4gICAgICAgICAgYGh0dHA6Ly9sb2NhbGhvc3Q6MzEwMC9wYWludGluZy8ke2lkfWBcbiAgICAgICAgKTtcbiAgICAgICAgc2V0UGFpbnRpbmcocmVzcG9uc2UuZGF0YSk7XG4gICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZS5tZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZmV0Y2hQYWludGluZygpO1xuICB9LCBbaWRdKTtcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICB7IWlzTG9hZGluZyA/IChcbiAgICAgICAgPGltZyBjbGFzc05hbWU9XCJpbWFnZVwiIHNyYz17cGFpbnRpbmcuYmlnSW1hZ2V9IGFsdD1cIlwiIC8+XG4gICAgICApIDogKFxuICAgICAgICA8c3Bhbj50ZXN0PC9zcGFuPlxuICAgICAgKX1cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmltYWdlIHtcbiAgICAgICAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAxNTVweCk7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBhaW50aW5nO1xuIl19 */\\n/*@ sourceURL=/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/painting/[id].js */\"));\n};\n\nexport default Painting;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/painting/[id].js"],"names":["useState","useEffect","useCallback","useRouter","axios","Layout","Painting","props","router","painting","setPainting","isLoading","setIsLoading","id","query","fetchPainting","response","get","data","e","console","error","message","bigImage"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACW,SAAD;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMa,EAAE,GAAGL,MAAM,CAACM,KAAP,CAAaD,EAAxB;AAEA,QAAME,aAAa,GAAGb,WAAW,CAAC,YAAY;AAC5C,QAAIW,EAAJ,EAAQ;AACN,UAAI;AACF,cAAMG,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACpB,kCAAiCJ,EAAG,EADhB,CAAvB;AAGAH,QAAAA,WAAW,CAACM,QAAQ,CAACE,IAAV,CAAX;AACAN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAND,CAME,OAAOO,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,OAAhB;AACD;AACF;AACF,GAZgC,CAAjC;AAcArB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACF,EAAD,CAFM,CAAT;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,SAAD,GACC;AAAuB,IAAA,GAAG,EAAEF,QAAQ,CAACc,QAArC;AAA+C,IAAA,GAAG,EAAC,EAAnD;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA,qlEADF;AAcD,CAtCD;;AAwCA,eAAejB,QAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport axios from \"axios\";\n\nimport Layout from \"../../components/Layout\";\n\nconst Painting = props => {\n  const router = useRouter();\n  const [painting, setPainting] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const id = router.query.id;\n\n  const fetchPainting = useCallback(async () => {\n    if (id) {\n      try {\n        const response = await axios.get(\n          `http://localhost:3100/painting/${id}`\n        );\n        setPainting(response.data);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    }\n  });\n\n  useEffect(() => {\n    fetchPainting();\n  }, [id]);\n\n  return (\n    <Layout>\n      {!isLoading ? (\n        <img className=\"image\" src={painting.bigImage} alt=\"\" />\n      ) : (\n        <span>test</span>\n      )}\n      <style jsx>{`\n        .image {\n          height: calc(100vh - 155px);\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default Painting;\n"]},"metadata":{},"sourceType":"module"}