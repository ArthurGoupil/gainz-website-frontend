{"ast":null,"code":"var _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paints = props => {\n  const {\n    0: paints,\n    1: setPaints\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  useEffect(() => {\n    const fetchPaints = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3100/paints\");\n        setPaints(response.data);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    };\n\n    fetchPaints();\n  }, []);\n  console.log(_objectSpread({}, paints[0]));\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, !isLoading ? __jsx(\"div\", {\n    className: \"d-flex flex-wrap space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }) : __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"test\"));\n};\n\nexport default Paints;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js"],"names":["useState","useEffect","axios","Layout","PaintBloc","Paints","props","paints","setPaints","isLoading","setIsLoading","fetchPaints","response","get","data","e","console","error","message","log"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,8BAAV,CAAvB;AACAL,QAAAA,SAAS,CAACI,QAAQ,CAACE,IAAV,CAAT;AACAJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJD,CAIE,OAAOK,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,OAAhB;AACD;AACF,KARD;;AASAP,IAAAA,WAAW;AACZ,GAXQ,EAWN,EAXM,CAAT;AAYAK,EAAAA,OAAO,CAACG,GAAR,mBAAiBZ,MAAM,CAAC,CAAD,CAAvB;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACE,SAAD,GACC;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,CADF;AAWD,CA7BD;;AA+BA,eAAeJ,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\n\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paints = props => {\n  const [paints, setPaints] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPaints = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3100/paints\");\n        setPaints(response.data);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    };\n    fetchPaints();\n  }, []);\n  console.log({ ...paints[0] });\n\n  return (\n    <Layout>\n      {!isLoading ? (\n        <div className=\"d-flex flex-wrap space-between\">\n          {/* <PaintBloc {...paints[0]} />; */}\n        </div>\n      ) : (\n        <span>test</span>\n      )}\n    </Layout>\n  );\n};\n\nexport default Paints;\n"]},"metadata":{},"sourceType":"module"}