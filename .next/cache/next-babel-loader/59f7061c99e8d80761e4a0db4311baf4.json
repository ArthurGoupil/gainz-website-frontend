{"ast":null,"code":"var _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paints = props => {\n  const {\n    0: paints,\n    1: setPaints\n  } = useState([]);\n  const {\n    0: paintsGrid,\n    1: setPaintsGrid\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const paintsArr = [];\n  useEffect(() => {\n    const fetchPaints = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3100/paints\");\n        setPaints(response.data);\n        response.data.forEach(paint => {\n          paintsArr.push({\n            src: paint.smallImage,\n            width: paint.width,\n            height: paint.height\n          });\n        });\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    };\n\n    fetchPaints();\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, !isLoading ? __jsx(\"div\", {\n    className: \"d-flex flex-wrap space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, paints.map(paint => {\n    return __jsx(PaintBloc, _extends({\n      key: paint._id\n    }, paint, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  })) : __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"test\"));\n};\n\nexport default Paints;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paints.js"],"names":["useState","useEffect","axios","Gallery","Layout","PaintBloc","Paints","props","paints","setPaints","paintsGrid","setPaintsGrid","isLoading","setIsLoading","paintsArr","fetchPaints","response","get","data","forEach","paint","push","src","smallImage","width","height","e","console","error","message","map","_id"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACU,UAAD;AAAA,OAAaC;AAAb,MAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACY,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMc,SAAS,GAAG,EAAlB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,8BAAV,CAAvB;AACAR,QAAAA,SAAS,CAACO,QAAQ,CAACE,IAAV,CAAT;AACAF,QAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,KAAK,IAAI;AAC7BN,UAAAA,SAAS,CAACO,IAAV,CAAe;AACbC,YAAAA,GAAG,EAAEF,KAAK,CAACG,UADE;AAEbC,YAAAA,KAAK,EAAEJ,KAAK,CAACI,KAFA;AAGbC,YAAAA,MAAM,EAAEL,KAAK,CAACK;AAHD,WAAf;AAKD,SAND;AAOAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAXD,CAWE,OAAOa,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAC,CAACG,OAAhB;AACD;AACF,KAfD;;AAgBAd,IAAAA,WAAW;AACZ,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,SAAD,GACC;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACsB,GAAP,CAAWV,KAAK,IAAI;AACnB,WAAO,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAK,CAACW;AAAtB,OAA+BX,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CADD,GAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,CADF;AAaD,CAvCD;;AAyCA,eAAed,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\n\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paints = props => {\n  const [paints, setPaints] = useState([]);\n  const [paintsGrid, setPaintsGrid] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const paintsArr = [];\n\n  useEffect(() => {\n    const fetchPaints = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3100/paints\");\n        setPaints(response.data);\n        response.data.forEach(paint => {\n          paintsArr.push({\n            src: paint.smallImage,\n            width: paint.width,\n            height: paint.height\n          });\n        });\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    };\n    fetchPaints();\n  }, []);\n\n  return (\n    <Layout>\n      {!isLoading ? (\n        <div className=\"d-flex flex-wrap space-between\">\n          {paints.map(paint => {\n            return <PaintBloc key={paint._id} {...paint} />;\n          })}\n        </div>\n      ) : (\n        <span>test</span>\n      )}\n    </Layout>\n  );\n};\n\nexport default Paints;\n"]},"metadata":{},"sourceType":"module"}