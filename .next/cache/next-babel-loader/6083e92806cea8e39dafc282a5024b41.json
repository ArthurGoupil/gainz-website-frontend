{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paint/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\n\nvar Painting = function Painting(props) {\n  var router = useRouter();\n\n  var _useState = useState({}),\n      painting = _useState[0],\n      setPainting = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var id = router.query.id;\n  var fetchPaint = useCallback(function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!id) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3100/paint/\".concat(id)));\n\n          case 4:\n            response = _context.sent;\n            setPaint(response.data);\n            setIsLoading(false);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0.message);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  });\n  useEffect(function () {\n    fetchPaint();\n  }, [id]);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, !isLoading ? __jsx(\"img\", {\n    src: paint.bigImage,\n    alt: \"\",\n    className: \"jsx-3827894570\" + \" \" + \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : __jsx(\"span\", {\n    className: \"jsx-3827894570\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"test\"), __jsx(_JSXStyle, {\n    id: \"3827894570\",\n    __self: this\n  }, \".image.jsx-3827894570{height:calc(100vh - 155px);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BcnRodXJHb3VwaWwvRG9jdW1lbnRzL0RldmVsb3BtZW50L1Byb2plY3RzL1JlYWN0L2dhaW56LXdlYnNpdGUvZnJvbnRlbmQvcGFnZXMvcGFpbnQvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQ2tCLEFBR3NDLDJCQUM3QiIsImZpbGUiOiIvVXNlcnMvQXJ0aHVyR291cGlsL0RvY3VtZW50cy9EZXZlbG9wbWVudC9Qcm9qZWN0cy9SZWFjdC9nYWluei13ZWJzaXRlL2Zyb250ZW5kL3BhZ2VzL3BhaW50L1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5cbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcblxuaW1wb3J0IExheW91dCBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9MYXlvdXRcIjtcblxuY29uc3QgUGFpbnRpbmcgPSBwcm9wcyA9PiB7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICBjb25zdCBbcGFpbnRpbmcsIHNldFBhaW50aW5nXSA9IHVzZVN0YXRlKHt9KTtcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBpZCA9IHJvdXRlci5xdWVyeS5pZDtcblxuICBjb25zdCBmZXRjaFBhaW50ID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGlmIChpZCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHA6Ly9sb2NhbGhvc3Q6MzEwMC9wYWludC8ke2lkfWApO1xuICAgICAgICBzZXRQYWludChyZXNwb25zZS5kYXRhKTtcbiAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlLm1lc3NhZ2UpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBmZXRjaFBhaW50KCk7XG4gIH0sIFtpZF0pO1xuXG4gIHJldHVybiAoXG4gICAgPExheW91dD5cbiAgICAgIHshaXNMb2FkaW5nID8gKFxuICAgICAgICA8aW1nIGNsYXNzTmFtZT1cImltYWdlXCIgc3JjPXtwYWludC5iaWdJbWFnZX0gYWx0PVwiXCIgLz5cbiAgICAgICkgOiAoXG4gICAgICAgIDxzcGFuPnRlc3Q8L3NwYW4+XG4gICAgICApfVxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuaW1hZ2Uge1xuICAgICAgICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDE1NXB4KTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUGFpbnQ7XG4iXX0= */\\n/*@ sourceURL=/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paint/[id].js */\"));\n};\n\nexport default Paint;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paint/[id].js"],"names":["useState","useEffect","useCallback","useRouter","axios","Layout","Painting","props","router","painting","setPainting","isLoading","setIsLoading","id","query","fetchPaint","get","response","setPaint","data","console","error","message","paint","bigImage","Paint"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AADwB,kBAEQH,QAAQ,CAAC,EAAD,CAFhB;AAAA,MAEjBS,QAFiB;AAAA,MAEPC,WAFO;;AAAA,mBAGUV,QAAQ,CAAC,IAAD,CAHlB;AAAA,MAGjBW,SAHiB;AAAA,MAGNC,YAHM;;AAIxB,MAAMC,EAAE,GAAGL,MAAM,CAACM,KAAP,CAAaD,EAAxB;AAEA,MAAME,UAAU,GAAGb,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACzBW,EADyB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAGFT,KAAK,CAACY,GAAN,uCAAyCH,EAAzC,EAHE;;AAAA;AAGnBI,YAAAA,QAHmB;AAIzBC,YAAAA,QAAQ,CAACD,QAAQ,CAACE,IAAV,CAAR;AACAP,YAAAA,YAAY,CAAC,KAAD,CAAZ;AALyB;AAAA;;AAAA;AAAA;AAAA;AAOzBQ,YAAAA,OAAO,CAACC,KAAR,CAAc,YAAEC,OAAhB;;AAPyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,CAA9B;AAYArB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACF,EAAD,CAFM,CAAT;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,SAAD,GACC;AAAuB,IAAA,GAAG,EAAEY,KAAK,CAACC,QAAlC;AAA4C,IAAA,GAAG,EAAC,EAAhD;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA,shEADF;AAcD,CApCD;;AAsCA,eAAeC,KAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport axios from \"axios\";\n\nimport Layout from \"../../components/Layout\";\n\nconst Painting = props => {\n  const router = useRouter();\n  const [painting, setPainting] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const id = router.query.id;\n\n  const fetchPaint = useCallback(async () => {\n    if (id) {\n      try {\n        const response = await axios.get(`http://localhost:3100/paint/${id}`);\n        setPaint(response.data);\n        setIsLoading(false);\n      } catch (e) {\n        console.error(e.message);\n      }\n    }\n  });\n\n  useEffect(() => {\n    fetchPaint();\n  }, [id]);\n\n  return (\n    <Layout>\n      {!isLoading ? (\n        <img className=\"image\" src={paint.bigImage} alt=\"\" />\n      ) : (\n        <span>test</span>\n      )}\n      <style jsx>{`\n        .image {\n          height: calc(100vh - 155px);\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default Paint;\n"]},"metadata":{},"sourceType":"module"}