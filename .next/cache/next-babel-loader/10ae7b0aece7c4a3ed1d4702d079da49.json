{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paint/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Layout from \"../../components/Layout\";\n\nvar Paint = function Paint(props) {\n  var router = useRouter();\n\n  var _useState = useState({}),\n      paint = _useState[0],\n      setPaint = _useState[1];\n\n  var _useState2 = useState({}),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var fetchPaint = useCallback(function _callee() {\n    var id, response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = router.query.id;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3100/paint/\".concat(id)));\n\n          case 4:\n            response = _context.sent;\n            setPaint(response.data);\n            console.log(response.data);\n            setIsLoading(false);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0.message);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  });\n  useEffect(function () {\n    fetchPaint();\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, router.query.id));\n};\n\nexport default Paint;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/pages/paint/[id].js"],"names":["useState","useEffect","useCallback","useRouter","axios","Layout","Paint","props","router","paint","setPaint","isLoading","setIsLoading","fetchPaint","id","query","get","response","data","console","log","error","message"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AADqB,kBAEKH,QAAQ,CAAC,EAAD,CAFb;AAAA,MAEdS,KAFc;AAAA,MAEPC,QAFO;;AAAA,mBAGaV,QAAQ,CAAC,EAAD,CAHrB;AAAA,MAGdW,SAHc;AAAA,MAGHC,YAHG;;AAKrB,MAAMC,UAAU,GAAGX,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBY,YAAAA,EADuB,GAClBN,MAAM,CAACO,KAAP,CAAaD,EADK;AAAA;AAAA;AAAA,6CAIJV,KAAK,CAACY,GAAN,uCAAyCF,EAAzC,EAJI;;AAAA;AAIrBG,YAAAA,QAJqB;AAK3BP,YAAAA,QAAQ,CAACO,QAAQ,CAACC,IAAV,CAAR;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AAEAN,YAAAA,YAAY,CAAC,KAAD,CAAZ;AAR2B;AAAA;;AAAA;AAAA;AAAA;AAU3BO,YAAAA,OAAO,CAACE,KAAR,CAAc,YAAEC,OAAhB;;AAV2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,CAA9B;AAcArB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,MAAM,CAACO,KAAP,CAAaD,EAAlB,CADF,CADF;AAKD,CA5BD;;AA8BA,eAAeR,KAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport axios from \"axios\";\n\nimport Layout from \"../../components/Layout\";\n\nconst Paint = props => {\n  const router = useRouter();\n  const [paint, setPaint] = useState({});\n  const [isLoading, setIsLoading] = useState({});\n\n  const fetchPaint = useCallback(async () => {\n    const id = router.query.id;\n\n    try {\n      const response = await axios.get(`http://localhost:3100/paint/${id}`);\n      setPaint(response.data);\n      console.log(response.data);\n\n      setIsLoading(false);\n    } catch (e) {\n      console.error(e.message);\n    }\n  });\n\n  useEffect(() => {\n    fetchPaint();\n  }, []);\n\n  return (\n    <Layout>\n      <h1>{router.query.id}</h1>\n    </Layout>\n  );\n};\n\nexport default Paint;\n"]},"metadata":{},"sourceType":"module"}