{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/components/SelectedImage.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\n\nvar Checkmark = function Checkmark(_ref) {\n  var selected = _ref.selected;\n  return __jsx(\"div\", {\n    style: selected ? {\n      left: \"4px\",\n      top: \"4px\",\n      position: \"absolute\",\n      zIndex: \"1\"\n    } : {\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    style: {\n      fill: \"white\",\n      position: \"absolute\"\n    },\n    width: \"24px\",\n    height: \"24px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"circle\", {\n    cx: \"12.5\",\n    cy: \"12.2\",\n    r: \"8.292\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), __jsx(\"svg\", {\n    style: {\n      fill: \"#06befa\",\n      position: \"absolute\"\n    },\n    width: \"24px\",\n    height: \"24px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"path\", {\n    d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n};\n\nvar imgStyle = {\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nvar selectedImgStyle = {\n  transform: \"translateZ(0px) scale3d(0.9, 0.9, 1)\",\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nvar cont = {\n  backgroundColor: \"#eee\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  position: \"relative\"\n};\n\nvar SelectedImage = function SelectedImage(_ref2) {\n  var index = _ref2.index,\n      photo = _ref2.photo,\n      margin = _ref2.margin,\n      direction = _ref2.direction,\n      top = _ref2.top,\n      left = _ref2.left,\n      selected = _ref2.selected,\n      key = _ref2.key;\n\n  var _useState = useState(selected),\n      isSelected = _useState[0],\n      setIsSelected = _useState[1]; //calculate x,y scale\n\n\n  var sx = (100 - 30 / photo.width * 100) / 100;\n  var sy = (100 - 30 / photo.height * 100) / 100;\n  selectedImgStyle.transform = \"translateZ(0px) scale3d(\".concat(sx, \", \").concat(sy, \", 1)\");\n\n  if (direction === \"column\") {\n    cont.position = \"absolute\";\n    cont.left = left;\n    cont.top = top;\n  }\n\n  var handleOnClick = function handleOnClick(e) {\n    setIsSelected(!isSelected);\n  };\n\n  useEffect(function () {\n    setIsSelected(selected);\n  }, [selected]);\n  return __jsx(\"div\", {\n    key: key,\n    style: _objectSpread({\n      margin: margin,\n      height: photo.height,\n      width: photo.width\n    }, cont),\n    className: !isSelected ? \"not-selected\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Checkmark, {\n    selected: isSelected ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), __jsx(\"img\", _extends({\n    alt: photo.title,\n    style: isSelected ? _objectSpread({}, imgStyle, {}, selectedImgStyle) : _objectSpread({}, imgStyle)\n  }, photo, {\n    onClick: handleOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), __jsx(\"style\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \".not-selected:hover{outline:2px solid #06befa}\"));\n};\n\nexport default SelectedImage;","map":{"version":3,"sources":["/Users/ArthurGoupil/Documents/Development/Projects/React/gainz-website/frontend/components/SelectedImage.js"],"names":["React","useState","useEffect","Checkmark","selected","left","top","position","zIndex","display","fill","imgStyle","transition","selectedImgStyle","transform","cont","backgroundColor","cursor","overflow","SelectedImage","index","photo","margin","direction","key","isSelected","setIsSelected","sx","width","sy","height","handleOnClick","e","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Checkmark = ({ selected }) => (\n  <div\n    style={\n      selected\n        ? { left: \"4px\", top: \"4px\", position: \"absolute\", zIndex: \"1\" }\n        : { display: \"none\" }\n    }\n  >\n    <svg\n      style={{ fill: \"white\", position: \"absolute\" }}\n      width=\"24px\"\n      height=\"24px\"\n    >\n      <circle cx=\"12.5\" cy=\"12.2\" r=\"8.292\" />\n    </svg>\n    <svg\n      style={{ fill: \"#06befa\", position: \"absolute\" }}\n      width=\"24px\"\n      height=\"24px\"\n    >\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n  </div>\n);\n\nconst imgStyle = {\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst selectedImgStyle = {\n  transform: \"translateZ(0px) scale3d(0.9, 0.9, 1)\",\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst cont = {\n  backgroundColor: \"#eee\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  position: \"relative\"\n};\n\nconst SelectedImage = ({\n  index,\n  photo,\n  margin,\n  direction,\n  top,\n  left,\n  selected,\n  key\n}) => {\n  const [isSelected, setIsSelected] = useState(selected);\n  //calculate x,y scale\n  const sx = (100 - (30 / photo.width) * 100) / 100;\n  const sy = (100 - (30 / photo.height) * 100) / 100;\n  selectedImgStyle.transform = `translateZ(0px) scale3d(${sx}, ${sy}, 1)`;\n\n  if (direction === \"column\") {\n    cont.position = \"absolute\";\n    cont.left = left;\n    cont.top = top;\n  }\n\n  const handleOnClick = e => {\n    setIsSelected(!isSelected);\n  };\n\n  useEffect(() => {\n    setIsSelected(selected);\n  }, [selected]);\n\n  return (\n    <div\n      key={key}\n      style={{ margin, height: photo.height, width: photo.width, ...cont }}\n      className={!isSelected ? \"not-selected\" : \"\"}\n    >\n      <Checkmark selected={isSelected ? true : false} />\n      <img\n        alt={photo.title}\n        style={\n          isSelected ? { ...imgStyle, ...selectedImgStyle } : { ...imgStyle }\n        }\n        {...photo}\n        onClick={handleOnClick}\n      />\n      <style>{`.not-selected:hover{outline:2px solid #06befa}`}</style>\n    </div>\n  );\n};\n\nexport default SelectedImage;\n"]},"metadata":{},"sourceType":"module"}