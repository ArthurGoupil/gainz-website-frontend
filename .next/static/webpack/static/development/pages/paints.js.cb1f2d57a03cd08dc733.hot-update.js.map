{"version":3,"file":"static/webpack/static/development/pages/paints.js.cb1f2d57a03cd08dc733.hot-update.js","sources":["webpack:///./pages/paints.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\n\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\nimport SelectedImage from \"../components/SelectedImage\";\n\nconst Paints = props => {\n  const [paints, setPaints] = useState([]);\n  const [paintsGrid, setPaintsGrid] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const paintsArr = [];\n\n  const fetchPaints = useCallback(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3100/paints\");\n      setPaints(response.data);\n      response.data.forEach(paint => {\n        paintsArr.push({\n          src: paint.smallImage,\n          width: paint.width,\n          height: paint.height\n        });\n      });\n      setPaintsGrid(paintsArr);\n      setIsLoading(false);\n    } catch (e) {\n      console.error(e.message);\n    }\n  });\n\n  useEffect(() => {\n    fetchPaints();\n  }, []);\n\n  return (\n    <Layout>\n      {!isLoading ? (\n        <Gallery\n          photos={paintsGrid}\n          renderImage={\n            ({ index, left, top, key, photo }) => (\n              <PaintBloc\n                key={paints[index]._id}\n                margin={\"20px\"}\n                index={index}\n                {...paints[index]}\n              />\n            )\n            // <SelectedImage\n            //   selected={false}\n            //   key={photo._id}\n            //   margin={\"2px\"}\n            //   index={index}\n            //   photo={photo}\n            //   left={left}\n            //   top={top}\n            // />\n          }\n        />\n      ) : (\n        <span>test</span>\n      )}\n    </Layout>\n  );\n};\n\nexport default Paints;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAZA;AAAA;AACA;AADA;AAAA;AAAA;AAcA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}