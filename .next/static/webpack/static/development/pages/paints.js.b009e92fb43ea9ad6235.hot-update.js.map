{"version":3,"file":"static/webpack/static/development/pages/paints.js.b009e92fb43ea9ad6235.hot-update.js","sources":["webpack:///./components/SelectedImage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Checkmark = ({ selected }) => (\n  <div\n    style={\n      selected\n        ? { left: \"4px\", top: \"4px\", position: \"absolute\", zIndex: \"1\" }\n        : { display: \"none\" }\n    }\n  >\n    <svg\n      style={{ fill: \"white\", position: \"absolute\" }}\n      width=\"24px\"\n      height=\"24px\"\n    >\n      <circle cx=\"12.5\" cy=\"12.2\" r=\"8.292\" />\n    </svg>\n    <svg\n      style={{ fill: \"#06befa\", position: \"absolute\" }}\n      width=\"24px\"\n      height=\"24px\"\n    >\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n  </div>\n);\n\nconst imgStyle = {\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst selectedImgStyle = {\n  transform: \"translateZ(0px) scale3d(0.9, 0.9, 1)\",\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\n};\nconst cont = {\n  backgroundColor: \"#eee\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  position: \"relative\"\n};\n\nconst SelectedImage = ({\n  index,\n  photo,\n  margin,\n  direction,\n  top,\n  left,\n  selected,\n  key\n}) => {\n  const [isSelected, setIsSelected] = useState(selected);\n  //calculate x,y scale\n  const sx = (100 - (30 / photo.width) * 100) / 100;\n  const sy = (100 - (30 / photo.height) * 100) / 100;\n  selectedImgStyle.transform = `translateZ(0px) scale3d(${sx}, ${sy}, 1)`;\n\n  if (direction === \"column\") {\n    cont.position = \"absolute\";\n    cont.left = left;\n    cont.top = top;\n  }\n\n  const handleOnClick = e => {\n    setIsSelected(!isSelected);\n  };\n\n  useEffect(() => {\n    setIsSelected(selected);\n  }, [selected]);\n\n  return (\n    <div\n      style={{ margin, height: photo.height, width: photo.width, ...cont }}\n      className={!isSelected ? \"not-selected\" : \"\"}\n    >\n      <Checkmark selected={isSelected ? true : false} />\n      <img\n        alt={photo.title}\n        style={\n          isSelected ? { ...imgStyle, ...selectedImgStyle } : { ...imgStyle }\n        }\n        {...photo}\n        onClick={handleOnClick}\n      />\n      <style>{`.not-selected:hover{outline:2px solid #06befa}`}</style>\n    </div>\n  );\n};\n\nexport default SelectedImage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AACA;AAwBA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAMA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}