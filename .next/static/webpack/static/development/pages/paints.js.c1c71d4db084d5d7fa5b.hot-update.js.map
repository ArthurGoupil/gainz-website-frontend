{"version":3,"file":"static/webpack/static/development/pages/paints.js.c1c71d4db084d5d7fa5b.hot-update.js","sources":["webpack:///./pages/paints.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nimport axios from \"axios\";\nimport Gallery from \"react-photo-gallery\";\n\nimport Layout from \"../components/Layout\";\nimport PaintBloc from \"../components/PaintBloc\";\n\nconst Paintings = props => {\n  const [paintings, setPaintings] = useState([]);\n  const [paintingsGrid, setPaintingsGrid] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const paintingsArr = [];\n\n  const fetchPaintings = useCallback(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3100/paintings\");\n      setPaintings(response.data);\n      response.data.forEach(painting => {\n        paintingsArr.push({\n          src: painting.smallImage,\n          width: painting.width,\n          height: painting.height\n        });\n      });\n      setPaintingsGrid(paintingsArr);\n      setIsLoading(false);\n    } catch (e) {\n      console.error(e.message);\n    }\n  });\n\n  useEffect(() => {\n    fetchPaintings();\n  }, []);\n\n  return (\n    <Layout>\n      {!isLoading ? (\n        <Gallery\n          margin={10}\n          photos={paintingsGrid}\n          limitNodeSearch={3}\n          targetRowHeight={450}\n          renderImage={({ index, photo, margin }) => (\n            <PaintBloc\n              key={paintings[index]._id}\n              index={index}\n              photo={photo}\n              margin={margin}\n              {...paintings[index]}\n            />\n          )}\n        />\n      ) : (\n        <span>test</span>\n      )}\n    </Layout>\n  );\n};\n\nexport default Paintings;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAZA;AAAA;AACA;AADA;AAAA;AAAA;AAcA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}